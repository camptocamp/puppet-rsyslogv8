# file is managed by puppet

###########################
#### GLOBAL DIRECTIVES ####
###########################
global(
<% if scope.lookupvar('rsyslogv8::preserve_fqdn') %>
 preserveFQDN="on"
<% end -%>
<% if scope.lookupvar('rsyslogv8::local_host_name') and scope.lookupvar('rsyslogv8::local_host_name') != :undef %>
 localHostName="<%= scope.lookupvar('rsyslogv8::local_host_name') %>"
<% end -%>
 maxMessageSize="<%= scope.lookupvar('rsyslogv8::max_message_size') %>"
 action.reportSuspension="on"
 workDirectory="<%= scope.lookupvar('rsyslogv8::spool_dir') %>"
<% if scope.lookupvar('rsyslogv8::ssl') and scope.lookupvar('rsyslogv8::ssl') != :undef %>
 defaultNetstreamDriver="gtls"
 defaultNetStreamDriverCAFile="<%= scope.lookupvar('rsyslogv8::ssl') %>"
<%   if scope.lookupvar('rsyslogv8::ssl_cert') and scope.lookupvar('rsyslogv8::ssl_cert') != :undef %>
 defaultNetstreamDriverCertFile="<%= scope.lookupvar('rsyslogv8::ssl_cert') %>"
<%   end -%>
<%   if scope.lookupvar('rsyslogv8::ssl_key') and scope.lookupvar('rsyslogv8::ssl_key') != :undef %>
 defaultNetstreamDriverKeyFile="<%= scope.lookupvar('rsyslogv8::ssl_key') %>"
<%   end -%>
<% end -%>
)

$PrivDropToUser <%= scope.lookupvar('rsyslogv8::run_user') %>
$PrivDropToGroup <%= scope.lookupvar('rsyslogv8::run_group') %>
<% if scope.lookupvar('rsyslogv8::umask') -%>
$Umask <%= scope.lookupvar('rsyslogv8::umask') %>
<% end -%>

#################
#### MODULES ####
#################

<% scope.lookupvar('rsyslogv8::modules').each_pair do |name, data| -%>
module(load="<%= name %>"<%
  if data.fetch('arguments', nil)
    if not data['arguments'].kind_of?(Array)
      raise Puppet::ParseError, "rsyslogv8::modules['arguments'] must be an array"
    end
    data['arguments'].each_index do |index|
      argument=data['arguments'][index]
      if not argument.kind_of?(Hash)
        raise Puppet::ParseError, "rsyslogv8::modules['arguments'][#{index}] is not a Hash"
      end
      if not argument.fetch('name', nil) or not argument.fetch('value', nil)
        raise Puppet::ParseError, "rsyslogv8::modules['arguments'][#{index}] must contain keys \"name\" and \"value\""
      end %>
  <%= argument['name'] %>="<%= argument['value'] %>"
<%  end
  end -%>
)
<% end -%>

module(load="builtin:omfile"
 fileOwner="<%= scope.lookupvar('rsyslogv8::log_user') %>"
 fileGroup="<%= scope.lookupvar('rsyslogv8::log_group') %>"
 fileCreateMode="<%= scope.lookupvar('rsyslogv8::perm_file') %>"
 dirOwner="<%= scope.lookupvar('rsyslogv8::log_user') %>"
 dirGroup="<%= scope.lookupvar('rsyslogv8::log_group') %>"
 dirCreateMode="<%= scope.lookupvar('rsyslogv8::perm_dir') %>"
<%- if scope.lookupvar('rsyslogv8::default_template')  and scope.lookupvar('rsyslogv8::default_template') != :undef %>
 template="<%= scope.lookupvar('rsyslogv8::default_template') %>"
<% end -%>
)

#
# Include all config files in <%= scope.lookupvar('rsyslogv8::rsyslog_d') %>
#
$IncludeConfig <%= scope.lookupvar('rsyslogv8::rsyslog_d') -%>*.conf

#
# Emergencies are sent to everybody logged in.
#
*.emerg	:omusrmsg:*

